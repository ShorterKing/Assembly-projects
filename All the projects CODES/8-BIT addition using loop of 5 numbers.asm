DATA SEGMENT                ;DATA SEGMENT STARTS
    A DB 0F9H               ;ALLOCATING SPACE FOR OUR VALUE 0F9H INTO A 
    B DB 0A0H               ;ALLOCATING SPACE FOR OUR VALUE 0A0H INTO B
    C DB 0F0H               ;ALLOCATING SPACE FOR OUR VALUE 0F0H INTO C
    D DB 0B3H               ;ALLOCATING SPACE FOR OUR VALUE 0B3H INTO D
    E DB 0C1H               ;ALLOCATING SPACE FOR OUR VALUE 0C1H INTO E
    SUM DB ?                ;SUM TO ADD ALL THE VALUES FROM DB
    CARRY DB 00H            ;USING CARRY FUNCTION TO RELOCATE 00H INTO DB TO SAVE THE CARRY
    DATA ENDS               ;DATA ENDS FROM DATA SEGMENT
CODE SEGMENT                ;CODE SEGMENT STARTS
          
    ASSUME CS:CODE,DS:DATA  ;SPECIFYING THE CODE AS CS, AND DATA AS DS 
    START:                  ;SIMPLE START AGRUMENT TO TELL THE ASSEMBLER TO START FROM HERE
    MOV AX,DATA             ;MOVING THE VALIE OF DATA INTO DATA
    MOV DS,AX               ;MOVING THE VALUE OF AX INTO DS
    MOV DL,A                ;MOVING THE VALUE OF A INTO DL
    MOV BH,B                ;MOVING THE VALUE OF B INTO BH
    MOV AH,C                ;MOVING THE VALUE OF C INTO AH
    MOV CH,D                ;MOVING THE VALUE OF D INTO CH
    MOV CL,E                ;MOVING THE VALUE OF E INTO CL 
                        
    MOV [2000H],DL          ;MOVING THE VALUE OF DL INTO 20000H WHICH IS THE ADDRESS SPECIFIED
    MOV [2001H],BH          ;MOVING THE VALUE OF BH INTO 20001H WHICH IS THE ADDRESS SPECIFIED
    MOV [2002H],AH          ;MOVING THE VALUE OF AH INTO 20002H WHICH IS THE ADDRESS SPECIFIED
    MOV [2003H],CH          ;MOVING THE VALUE OF CH INTO 20003H WHICH IS THE ADDRESS SPECIFIED
    MOV [2004H],CL          ;MOVING THE VALUE OF CL INTO 20004H WHICH IS THE ADDRESS SPECIFIED  
         
    MOV CL,05               ;CL USED TO COMMAND LOOP TO DO LOOP 5 TIMES
    MOV SI,2000H            ;SI USED TO POINT TP THE START DESTINATION OF THE LOOP
    MOV AX,00H              ;MOVING VALUE 00H INTO AX TO GIVE THE VALUE OF CARRY 00 TO MAKE IT 1 
    ADDLOOP:MOV BL,[SI]     ;USING BL (Base register) TO POINT FOR THE MEMORY LOCATION WHICH IS STORED IN SI 
    ADD AL,BL               ;USING AL TO MOV THE VALUE OF BL INTO AL 
    JNC NEXT                ;IF THERE IS NO CARRY THEN CARRY OUT THE NEXT ARGUMENT 
    INC AH                  ;INCRIMENTING THE CARRY INTO AH 
    NEXT: INC SI            ;INC INCRIMENTING SI
    DEC CL                  ;DEC DECRINMENTING CL BY 1
    JNZ ADDLOOP             ;JUMP IF NOT ZERO WE ARE ADDING LOOP IF ZERO  
    MOV SUM,AL              ;NOW WE ARE MOVING AL INTO SUM TO ADD
    MOV CARRY,AH            ;NOW WE ARE MOVING AH INTO CARRY TO SAVE THE CARRY FROM INCRIMENTING THE CARRY
    INT 21H                 ;WE USE INT 21H TO EXECUTE THE COMMANDS AS FUNCTION DISPATCHER       
    CODE ENDS               ;SIMPLE ARGUMENT TO END THE CODE
END START                   ;SIMPLE ARGUMENT TO END THE START

     